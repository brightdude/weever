From 928dd24e9d863487ad866f292d9c460ba294c470 Mon Sep 17 00:00:00 2001
From: Bradley Arsenault <genixpro@gmail.com>
Date: Fri, 25 Apr 2014 12:26:30 -0400
Subject: [PATCH 1/2] Added in the ability to disable automatic validation when
 a model is saved.

---
 docs/guide.jade | 21 +++++++++++++++++++++
 lib/document.js |  9 +++++++--
 lib/schema.js   |  2 ++
 3 files changed, 30 insertions(+), 2 deletions(-)

diff --git a/docs/guide.jade b/docs/guide.jade
index 99b90e8..4a9146a 100644
--- a/docs/guide.jade
+++ b/docs/guide.jade
@@ -245,6 +245,7 @@ block content
     - [strict](#strict)
     - [toJSON](#toJSON)
     - [toObject](#toObject)
+    - [validateBeforeSave](#validateBeforeSave)
     - [versionKey](#versionKey)
 
   h4#autoIndex option: autoIndex
@@ -473,6 +474,26 @@ block content
 
   :markdown
     To see all available `toObject` options, read [this](/docs/api.html#document_Document-toObject).
+    
+  h4#validateOnSave option: validateOnSave
+  :markdown
+    By default, documents are automatically validated before they are saved to the database. This is to prevent saving an invalid document. If you want to handle validation manually, and be able to save objects which don't pass validation, you can set validateOnSave to false.
+
+  :js
+    var schema = new Schema({ name: String });
+    schema.set('validateOnSave', false);
+    schema.path('name').validate(function (value) {
+        return v != null;
+    });
+    var M = mongoose.model('Person', schema);
+    var m = new M({ name: null });
+    m.validate(function(err) {
+        console.log(err); // Will tell you that null is not allowed.
+    });
+    m.save(); // Succeeds despite being invalid
+
+  :markdown
+    To see all available `toObject` options, read [this](/docs/api.html#document_Document-toObject).
 
   h4#versionKey option: versionKey
   :markdown
diff --git a/lib/schema.js b/lib/schema.js
index d3dd3ca..cd876ec 100644
--- a/lib/schema.js
+++ b/lib/schema.js
@@ -36,6 +36,7 @@ var EventEmitter = require('events').EventEmitter
  * - [strict](/docs/guide.html#strict): bool - defaults to true
  * - [toJSON](/docs/guide.html#toJSON) - object - no default
  * - [toObject](/docs/guide.html#toObject) - object - no default
+ * - [validateBeforeSave](/docs/guide.html#validateBeforeSave) - bool - defaults to `true`
  * - [versionKey](/docs/guide.html#versionKey): bool - defaults to "__v"
  *
  * ####Note:
@@ -166,6 +167,7 @@ Schema.prototype.defaultOptions = function (options) {
     , autoIndex: true
     , shardKey: null
     , read: null
+    , validateBeforeSave: true
     // the following are only applied at construction time
     , noId: false // deprecated, use { _id: false }
     , _id: true
-- 
1.9.3


From 79ceb66dd2eb30dfeaa617af7f4ee6c910dfb5fe Mon Sep 17 00:00:00 2001
From: Bradley Arsenault <genixpro@gmail.com>
Date: Fri, 25 Apr 2014 12:45:59 -0400
Subject: [PATCH 2/2] Update guide.jade

removed an extraneous comment
---
 docs/guide.jade | 3 ---
 1 file changed, 3 deletions(-)

diff --git a/docs/guide.jade b/docs/guide.jade
index 4a9146a..1a875a7 100644
--- a/docs/guide.jade
+++ b/docs/guide.jade
@@ -492,9 +492,6 @@ block content
     });
     m.save(); // Succeeds despite being invalid
 
-  :markdown
-    To see all available `toObject` options, read [this](/docs/api.html#document_Document-toObject).
-
   h4#versionKey option: versionKey
   :markdown
     The `versionKey` is a property set on each document when first created by Mongoose. This keys value contains the internal [revision](http://aaronheckmann.tumblr.com/post/48943525537/mongoose-v3-part-1-versioning) of the document. The name of this document property is configurable. The default is `__v`. If this conflicts with your application you can configure as such:
-- 
1.9.3
